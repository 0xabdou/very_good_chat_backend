// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model AuthUser {
    id                  String @id @default(uuid())
    email               String @unique
    user                User?
    friends1            Friend[] @relation(name: "friends1")
    friends2            Friend[] @relation(name: "friends2")
    notifications       Notification[] @relation(name: "notification_owner")
    notificationFriend  Notification[] @relation(name: "notification_friend")
    @@map("auth_users")
}

model User {
    username            String @unique
    name                String?
    photoURLSource      String? @map("photo_url_source")
    photoURLMedium      String? @map("photo_url_medium")
    photoURLSmall       String? @map("photo_url_small")
    authUser            AuthUser @relation(fields: [authUserID], references: [id])
    authUserID          String @unique @map("auth_user")

    @@map("users")
}

model Friend {
   id           Int @id @default(autoincrement())
   user1        AuthUser @relation(name: "friends1", fields: [user1ID], references: [id])
   user1ID      String @map("user1_id")
   user2        AuthUser @relation(name: "friends2", fields: [user2ID], references: [id])
   user2ID      String @map("user2_id")
   confirmed    Boolean @default(false)
   date         DateTime @updatedAt

   @@map("friends")
   @@unique([user1ID, user2ID])
}

model Notification {
    id          Int @id @default(autoincrement())
    owner       AuthUser @relation(name: "notification_owner", fields: [ownerID], references: [id])
    ownerID     String
    type        NotificationType
    date        DateTime
    seen        Boolean @default(false)
    // If the type is REQUEST_ACCEPTED
    friend      AuthUser? @relation(name: "notification_friend", fields: [friendID], references: [id])
    friendID    String?
}

enum NotificationType {
    REQUEST_ACCEPTED
    SYSTEM
}

model Badge {
    user            AuthUser @relation(fields: [userID], references: [id])
    userID          String
    badgeName       BadgeName
    lastOpened      DateTime

    @@map("badges")
    @@unique([userID, badgeName])
}

enum BadgeName {
    NOTIFICATIONS
    FRIEND_REQUESTS
}